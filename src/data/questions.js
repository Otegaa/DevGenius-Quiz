export const languagesQuestions = {
  'C++': [
    {
      question: "What is the purpose of the 'cout' object?",
      options: [
        'To read input from the user',
        'To write output to the console',
        'To declare variables',
        'To perform mathematical operations',
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'What symbol denotes single-line comments?',
      options: ['#', '//', '/*', '--'],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'How do you declare a int variable?',
      options: [
        "'var' keyword",
        "'declare' keyword",
        'Automatic declaration',
        "'int' keyword + variable name",
      ],
      correctOption: 3,
      points: 10,
    },
    {
      question: 'What is the purpose of the if statement?',
      options: [
        'To declare a function',
        'To define a loop',
        'To conditionally execute code',
        'To perform file operations',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'What is a pointer?',
      options: [
        'Single character data type',
        "Variable storing another's address",
        'Math function',
        'Class definition keyword',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: 'How do you define a function?',
      options: [
        "'function' keyword",
        "'def' keyword",
        "'void' keyword + function name",
        "'func' keyword",
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is the purpose of the new operator?',
      options: [
        'Create new variable',
        'Allocate memory dynamically',
        'Mathematical operations',
        'Declare constant variable',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: 'What is operator overloading?',
      options: [
        'Custom operators',
        'Define multiple functions with same name',
        "Overload 'main' function",
        'Optimize code execution',
      ],
      correctOption: 0,
      points: 30,
    },
    {
      question: "What is the purpose of the 'try-catch' block",
      options: [
        'To declare variables',
        'To define loops',
        'To handle exceptions & errors in code',
        'To perform file operations',
      ],
      correctOption: 2,
      points: 30,
    },
    {
      question: 'What is the STL?',
      options: [
        'A GUI library',
        'A software testing tool',
        'Pre-built data structures and algorithms library',
        'A programming language',
      ],
      correctOption: 2,
      points: 30,
    },
  ],

  Python: [
    {
      question: 'How do you print "Hello, World!"?',
      options: [
        'print("Hello, World!")',
        'echo "Hello, World!"',
        'console.log("Hello, World!")',
        'System.out.println("Hello, World!")',
      ],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'What is the purpose of indentation?',
      options: [
        'No purpose; indentation not needed.',
        'Creating comments.',
        'Defines code blocks ans structures.',
        'Defines data types.',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'How do you declare a variable?',
      options: [
        "'var' keyword",
        "'int' keyword + variable name",
        'Automatic variable declaration',
        "'declare' keyword",
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'What is the purpose of the if statement?',
      options: [
        'To define a loop',
        'To conditionally execute code',
        'To declare variables',
        'To perform file operations',
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'What is a list comprehension?',
      options: [
        'A way to define comments',
        'A concise way to create lists',
        'A data structure for storing comments',
        'A loop for iterating through lists',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: 'How do you define a function?',
      options: [
        "'function' keyword",
        "'void' keyword + function name",
        "'def' keyword",
        "'func' keyword",
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is a module?',
      options: [
        'A type of data structure',
        'A GUI component',
        'A file containing reusable code',
        'A built-in data type',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is the main purpose of virtualenv?',

      options: [
        'Isolate project dependencies',
        'Virtual reality simulations',
        "Enhance Python's performance",
        'Automate code deployment',
      ],
      correctOption: 0,
      points: 30,
    },
    {
      question: 'What does "duck typing" mean?',
      options: [
        'Type based on variable name',
        'Type inferred from behavior',
        'Explicit type declarations',
        'Strict type checking',
      ],
      correctOption: 1,
      points: 30,
    },
    {
      question: "'collections' module provide what data structures?",
      options: [
        'Custom classes',
        'Advanced data types',
        'Exception handling',
        'Additional built-in types',
      ],
      correctOption: 3,
      points: 30,
    },
  ],

  Java: [
    {
      question: 'What is an array?',
      options: [
        'Single value data type',
        'Class for mathematical operations',
        'Collection of elements of same data type',
        'Java exception type',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'What is JVM?',
      options: [
        'Software component that executes Java bytecode',
        'Virtual reality headset',
        'Hardware component of a computer',
        'Device for reading barcodes',
      ],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'Keyword for creating class instance?',
      options: ['instance', 'new', 'create', 'instantiate'],
      correctOption: 3,
      points: 10,
    },
    {
      question: 'How do you define a constant?',
      options: [
        "'const' keyword",
        "'final' keyword",
        'Constants are automatically defined',
        "'let' keyword",
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: "What is the purpose of the 'this' keyword?",
      options: [
        'Declare variable',
        'Access static methods',
        'Refer to current instance',
        'Create arrays',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is a Java thread?',
      options: [
        'A string of text',
        'A type of exception',
        'An independent execution unit',
        'A GUI',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: "Purpose of 'static' modifier for methods?",
      options: [
        'Limits instance-specific access.',
        'Ensures thread safety.',
        'Maintains constant value.',
        'Associates them with class',
      ],
      correctOption: 3,
      points: 20,
    },
    {
      question: 'What is an interface?',
      options: [
        'A GUI',
        'A database connection',
        'Method signature blueprint',
        'A data structure',
      ],
      correctOption: 2,
      points: 30,
    },
    {
      question: 'How to achieve multiple inheritance?',
      options: [
        "Using 'extends' keyword",
        'It is not supported',
        'By implementing interfaces',
        'By using inner classes',
      ],
      correctOption: 2,
      points: 30,
    },
    {
      question: 'What is garbage collection?',
      options: [
        'Code optimization',
        'Memory deallocation',
        'Exception handling',
        'A way to sort data',
      ],
      correctOption: 1,
      points: 30,
    },
  ],

  Ruby: [
    {
      question: 'How do you print "Hello, World!"?',
      options: [
        'print("Hello, World!")',
        'puts "Hello, World!"',
        'console.log("Hello, World!")',
        'System.out.println("Hello, World!")',
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'How do you define a method?',
      options: [
        "'def' keyword",
        "'function' keyword",
        "'method' keyword",
        "'func' keyword",
      ],
      correctOption: 0,
      points: 10,
    },
    {
      question: "What is the purpose of the 'each' iterator?",
      options: [
        'To declare variables',
        'To define conditions',
        'To iterate over array elements',
        'To create classes',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'How do you create a comment?',
      options: [
        'Using "#"',
        'Using "/* ... */"',
        'Using "--"',
        'Comments are not supported',
      ],
      correctOption: 0,
      points: 10,
    },
    {
      question: "What is the purpose of the 'require' statement?",
      options: [
        'To add new features',
        'To include external libraries/modules',
        'To declare a variable',
        'To define a class',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: 'What is a Ruby gem?',
      options: [
        'A precious stone',
        'Ruby package manager',
        'Method for defining classes',
        'Web framework for Ruby',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: "Purpose of the 'yield' keyword?",
      options: [
        'Terminate a program',
        'Declare variables',
        'Return a value from a method',
        'Invoke block of code passed to method',
      ],
      correctOption: 3,
      points: 20,
    },
    {
      question: 'What is metaprogramming?',
      options: [
        'Programming with metaphysical concepts',
        'Code that writes code or modifies behavior',
        'Programming with multiple threads',
        'Design pattern to create user interfaces',
      ],
      correctOption: 1,
      points: 30,
    },
    {
      question: "What is the role of the 'self' keyword?",
      options: [
        'To access global variables',
        'To define a new class',
        'To refer to the superclass',
        'To refer to the current object/class',
      ],
      correctOption: 3,
      points: 30,
    },
    {
      question: "Purpose of the 'attr_accessor' method?",
      options: [
        'Create instance variables',
        'Define class methods',
        'Generate getter & setter methods',
        'Access global variables',
      ],
      correctOption: 2,
      points: 30,
    },
  ],

  Golang: [
    {
      question: 'What is the Go workspace (GOPATH)?',
      options: [
        'Code storage location',
        'Remote Go server',
        'Go project/package location variable',
        'A version control system',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: "What is a 'slice'?",
      options: [
        'Data type for storing single values',
        'Collection of elements',
        'A type of exception',
        'Dynamic, flexible view of an array',
      ],
      correctOption: 3,
      points: 10,
    },
    {
      question: 'How do you define a function?',
      options: [
        "'function' keyword",
        "'func' keyword + function name",
        "'void' keyword + function name",
        "'def' keyword",
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: "What is a 'goroutine'?",
      options: [
        'A lightweight thread of execution',
        'A way to define constants',
        'A type of network protocol',
        'A type of data structure',
      ],
      correctOption: 0,
      points: 10,
    },
    {
      question: "What is the purpose of 'channel'?",
      options: [
        'A pipe that connect concurrent goroutines',
        'AA type of data structure',
        'A way to define constants',
        'A way to create GUI',
      ],
      correctOption: 0,
      points: 20,
    },
    {
      question: "What is the purpose of the 'defer' keyword?",
      options: [
        'To terminate a program',
        'To defer function execution.',
        'To define constants',
        'To access global variables',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: "What is the purpose of the 'range' keyword?",
      options: [
        'To declare a variable',
        'To define conditions',
        'To iterate over various data types.',
        'To create constants',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: "What is the purpose of the 'interface' keyword?",
      options: [
        'To create user interfaces',
        'To specify required methods for a type.',
        'To define a loop',
        'To declare a variable',
      ],
      correctOption: 1,
      points: 30,
    },
    {
      question: "What is 'panic' used for?",
      options: [
        'Raise exceptions',
        'Terminate program',
        'Debug code',
        'Create GUIs',
      ],
      correctOption: 0,
      points: 30,
    },
    {
      question: "What is 'recover' used for?",
      options: [
        'Handle errors',
        'Debug code',
        'Catch and resume from panics',
        'Report debugging information',
      ],
      correctOption: 2,
      points: 30,
    },
  ],

  Javascript: [
    {
      question: "What does the acronym 'DOM' stand for?",
      options: [
        'Document Object Model',
        'Data Object Model',
        'Document Order Model',
        'Dynamic Object Model',
      ],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'Keywords for block-scoped variable declaration?',
      options: [
        'var and const',
        'let and var',
        'let and const',
        'const and var',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: "What is the result of '5' + 3?",
      options: ['53', '8', '35', "'53'"],
      correctOption: 3,
      points: 10,
    },
    {
      question: 'Function used to parse a string to an integer?',
      options: ['parseInt()', 'toInteger()', 'parseString()', "'toInt()'"],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'Purpose of map() function in array?',
      options: [
        'Apply function to each element.',
        'Remove elements from the array.',
        'Sort elements in the array.',
        'Filter elements in the array.',
      ],
      correctOption: 0,
      points: 20,
    },
    {
      question: "Purpose of the 'addEventListener' method?",
      options: [
        'Remove event listener from element.',
        'Add HTML element to the DOM.',
        'Attach event handler to a document.',
        'Create a new event.',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'Output of console.log(typeof NaN)?',
      options: ["'number'", "'string'", "'NaN'", "'undefined'"],
      correctOption: 0,
      points: 20,
    },
    {
      question: "Meaning of the term 'callback hell'?",
      options: [
        'Excessive callback nesting',
        'Callback-returning function.',
        'Popular callback framework',
        'Asynchronous code pattern.',
      ],
      correctOption: 0,
      points: 30,
    },
    {
      question: 'Purpose of the Promise object?',
      options: [
        'Create synchronous code',
        'A future-resolved value.',
        'Handle errors in async code.',
        'Declare fixed-value variable.',
      ],
      correctOption: 1,
      points: 30,
    },
    {
      question: 'Do declarative functions hoist?',
      options: [
        "No, they don't.",
        'Yes, they do',
        "Only with 'var'.",
        'They do, but after declaration.',
      ],
      correctOption: 1,
      points: 30,
    },
  ],

  React: [
    {
      question: 'Which company invented React?',
      options: ['Google', 'Apple', 'Netflix', 'Facebook'],
      correctOption: 3,
      points: 10,
    },
    {
      question: 'Name of the syntax to describe UI in components?',
      options: ['FBJ', 'Babel', 'JSX', 'ES2015'],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'What is the virtual DOM?',
      options: [
        'Browser DOM component.',
        'React rendering optimization.',
        'DOM querying in React.',
        'Built-in React HTML element.',
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'Fundamental building block of React apps?',
      options: ['Components', 'Blocks', 'Elements', 'Effects'],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'Purpose of state in a React component?',
      options: [
        'Store immutable information',
        'Store mutable data.',
        'Define layout/structure.',
        'Manage routing in React.',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: 'How to pass data from parent to child component?',
      options: [
        "'this.props' object.",
        "'this.state' object.",
        "'this.children' property.",
        "'this.childProps' object.",
      ],
      correctOption: 0,
      points: 20,
    },
    {
      question: 'Purpose of key prop in list rendering?',
      options: [
        'To set the font size',
        'To uniquely identify each element',
        'To specify the color',
        'To control the order of elements',
      ],
      correctOption: 1,
      points: 20,
    },

    {
      question: 'What is derived state?',
      options: [
        'Initial state of a component',
        'State triggered by user interactions.',
        'State stored in local storage',
        'State computed from other variables',
      ],
      correctOption: 3,
      points: 30,
    },
    {
      question: 'When should a callback be used to update state?',
      options: [
        'For slow state updates.',
        'For data-intensive state.',
        'For faster state updates.',
        'For state dependent on previous state.',
      ],
      correctOption: 3,
      points: 30,
    },
    {
      question: 'When does an effect run without a dependency array?',
      options: [
        'On component mount.',
        'On component unmount.',
        'First component re-render.',
        'Each component re-render.',
      ],
      correctOption: 3,
      points: 30,
    },
  ],

  Angular: [
    {
      question: 'Primary building block of an Angular app?',
      options: ['Functions', 'Modules', 'HTML', 'CSS'],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'Create an Angular component with CLI?',
      options: [
        'ng new component',
        'ng create component',
        'ng generate component',
        'ng add component',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'What is the purpose of a service?',
      options: [
        'Define the UI structure of a component',
        "Manage the application's state",
        'Style the user interface',
        'Handle HTTP requests and share data',
      ],
      correctOption: 3,
      points: 10,
    },
    {
      question: 'Angular directive for conditional element display?',
      options: ['*ngIf', '*ngFor', '*ngSwitch', '*ngInclude'],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'How to handle user input in Angular forms?',
      options: [
        '@Input decorator.',
        '@Output decorator.',
        '(ngModel) directive.',
        '(click) event binding.',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is lazy loading in Angular?',
      options: [
        'Load Angular modules asynchronously.',
        'Load Angular components individually.',
        'Delay Angular template rendering.',
        'Load Angular apps on user request.',
      ],
      correctOption: 0,
      points: 20,
    },
    {
      question: 'What is the purpose of RouterModule?',
      options: [
        'Create animations',
        'Manage HTTP requests',
        'Handle routing and navigation',
        'Create custom directives',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'How to share data between sibling components?',
      options: [
        'Input properties.',
        'Output properties/event emitters.',
        'Shared service/NgRx/Redux.',
        'Template reference variables.',
      ],
      correctOption: 2,
      points: 30,
    },
    {
      question: "Purpose of the '@ViewChild' decorator?",
      options: [
        'Inject a service into a component.',
        'Access child component/element.',
        'Define component variable.',
        'Create new component instance.',
      ],
      correctOption: 1,
      points: 30,
    },
    {
      question: 'Purpose the HTTP client module?',
      options: [
        'Manage Angular components',
        'Create and manage HTTP requests',
        'Handle user authentication',
        'Render Angular templates',
      ],
      correctOption: 1,
      points: 30,
    },
  ],

  Vue: [
    {
      question: 'What is the core library of Vue.js called?',
      options: ['Vue', ' VueJS', ' VueCore', ' VueLib'],
      correctOption: 0,
      points: 10,
    },
    {
      question: 'How do you bind data to the DOM?',
      options: [
        'Using Angular directives',
        'Using React components',
        'Using Vue directives',
        'Using jQuery',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: 'What is a Vue instance?',
      options: [
        'An instance of a class in Vue.js',
        'JavaScript object from Vue constructor',
        'A server running Vue applications',
        'A Vue component',
      ],
      correctOption: 1,
      points: 10,
    },
    {
      question: 'What is the template syntax used for?',
      options: [
        'Define CSS styles',
        'Define routes',
        'Define the structure of the UI',
        'Define API endpoints',
      ],
      correctOption: 2,
      points: 10,
    },
    {
      question: "What is Vue's official state management library?",
      options: ['Redux', 'Flux', 'Vuex', 'VueX'],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is Vue Router used for?',
      options: [
        'Handle HTTP requests',
        "Manage application's state",
        'Manage client-side routing',
        'Define server routes',
      ],
      correctOption: 2,
      points: 20,
    },
    {
      question: 'What is a Vue component?',
      options: [
        'Standalone Vue instance',
        'Custom HTML element in Vue.js',
        'Built-in HTML element in Vue.js',
        'A Vue directive',
      ],
      correctOption: 1,
      points: 20,
    },
    {
      question: 'What does v-model do?',
      options: [
        'Create custom directives.',
        'Bind input value to component data.',
        'Define routes/navigation',
        'Implement two-way data binding',
      ],
      correctOption: 3,
      points: 30,
    },
    {
      question: 'What is the CLI used for?',
      options: [
        'Vue state management.',
        'Vue project setup/tools.',
        'Vue routing',
        'Custom Vue directives',
      ],
      correctOption: 1,
      points: 30,
    },
    {
      question: 'Purpose of transition classes?',
      options: [
        'Define API endpoints.',
        'Create custom directives.',
        'Animate Vue components entering/leaving DOM.',
        'Manage server-side rendering (SSR).',
      ],
      correctOption: 2,
      points: 30,
    },
  ],
};
